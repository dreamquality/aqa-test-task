{
	"info": {
		"_postman_id": "f3f6df92-cf12-4c82-8033-e1d81fdb58a9",
		"name": "Dog CEO API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32018242"
	},
	"item": [
		{
			"name": "Get Dog Breeds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Status Code Validation",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Schema Validation",
							"const schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"message\": {",
							"            \"type\": \"object\",",
							"            \"patternProperties\": {",
							"                \"^[a-zA-Z]+$\": { \"type\": \"array\" }",
							"            },",
							"            \"additionalProperties\": false",
							"        },",
							"        \"status\": { \"type\": \"string\", \"enum\": [\"success\"] }",
							"    },",
							"    \"required\": [\"message\", \"status\"]",
							"};",
							"",
							"pm.test(\"Schema is valid\", function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"// Data Validation - Breeds list is not empty",
							"const breeds = Object.keys(pm.response.json().message);",
							"",
							"pm.test(\"Breeds list is not empty\", function () {",
							"    pm.expect(breeds.length).to.be.greaterThan(0);",
							"});",
							"",
							"// Data Validation - Breeds are alphabetic strings",
							"pm.test(\"Breeds are alphabetic strings\", function () {",
							"    breeds.forEach(breed => {",
							"        pm.expect(breed).to.match(/^[a-zA-Z]+$/);",
							"    });",
							"});",
							"",
							"// Unique Breeds Test",
							"pm.test(\"Breeds are unique\", function () {",
							"    const uniqueBreeds = new Set(breeds);",
							"    pm.expect(uniqueBreeds.size).to.equal(breeds.length);",
							"",
							"    // Format the breeds array with a newline every 6 breeds",
							"    const formattedBreeds = breeds.reduce((result, breed, index) => {",
							"        return result + breed + ((index + 1) % 6 === 0 ? '\\n' : ', ');",
							"    }, \"\");",
							"",
							"    // Display the formatted list of breeds in the test result",
							"    pm.test(`Breeds list:\\n${formattedBreeds}`, function () {",
							"        pm.expect(breeds.length).to.be.greaterThan(0); // Basic check to show list in test results",
							"    });",
							"});",
							"",
							"",
							"// Response Time Validation",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"// Check for specific breeds",
							"pm.test(\"Popular breeds are included\", function () {",
							"    pm.expect(breeds).to.include.members([\"labrador\", \"beagle\"]);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dog.ceo/api/breeds/list/all",
					"protocol": "https",
					"host": [
						"dog",
						"ceo"
					],
					"path": [
						"api",
						"breeds",
						"list",
						"all"
					]
				}
			},
			"response": []
		}
	]
}